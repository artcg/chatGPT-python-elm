
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'rightUMINUSrightNOTADD ARROW BAR COLON COMMA DEFINE DIV EQ FLOAT GT IDENT IN INTEGER LAMBDA LBRACE LBRACKET LET LPAREN LT MATCH MOD MUL NOT RBRACE RBRACKET REC RPAREN STRING SUB UMINUS WITHprogram : expressions\n    expressions : expressions expression\n                | expression\n    expression : INTEGERexpression : FLOATexpression : STRINGexpression : IDENTexpression : LPAREN tuple_expr RPAREN\n    tuple_expr : tuple_expr COMMA expression\n               | expression\n    expression : LBRACKET list_expr RBRACKET\n    list_expr : list_expr COMMA expression\n              | expression\n    expression : LBRACE record_expr RBRACE\n    record_expr : record_expr COMMA record_field\n                | record_field\n    record_field : IDENT COLON expression\n    expression : expression ADD expression\n               | expression SUB expression\n               | expression MUL expression\n               | expression DIV expression\n               | expression MOD expression\n               | expression LT expression\n               | expression GT expression\n               | expression EQ expression\n    expression : NOT expressionexpression : UMINUS expressionexpression : LET ident_list DEFINE expressions IN expression\n    ident_list : ident_list COMMA IDENT\n               | IDENT\n    expression : LET REC ident_expr_list IN expressions\n    ident_expr_list : ident_expr_list COMMA ident_expr\n                    | ident_expr\n    ident_expr : IDENT DEFINE expressionexpression : MATCH expression WITH match_expr_listmatch_expr_list : match_exprmatch_expr_list : match_expr_list match_exprmatch_expr : BAR pattern ARROW expression\n    pattern : INTEGER\n            | FLOAT\n            | STRING\n    pattern : IDENTpattern : LPAREN pattern_list RPAREN\n    pattern_list : pattern_list COMMA pattern\n                 | pattern\n    expression : LAMBDA pattern_list ARROW expressionexpression : expression LPAREN argument_list RPAREN\n    argument_list : argument_list COMMA expression\n                  | expression\n    '
    
_lr_action_items = {'INTEGER':([0,2,3,4,5,6,7,8,9,11,12,14,15,16,17,18,19,20,21,22,23,24,25,33,34,45,46,47,48,49,50,51,52,53,56,57,58,59,60,62,63,69,70,72,73,78,80,82,83,84,85,86,90,91,94,96,97,98,],[4,4,-3,-4,-5,-6,-7,4,4,4,4,4,41,-2,4,4,4,4,4,4,4,4,4,-26,-27,41,-18,-19,-20,-21,-22,-23,-24,-25,-8,4,-11,4,-14,4,4,4,41,-47,4,4,4,4,-35,-36,41,-46,4,4,-37,-28,4,-38,]),'FLOAT':([0,2,3,4,5,6,7,8,9,11,12,14,15,16,17,18,19,20,21,22,23,24,25,33,34,45,46,47,48,49,50,51,52,53,56,57,58,59,60,62,63,69,70,72,73,78,80,82,83,84,85,86,90,91,94,96,97,98,],[5,5,-3,-4,-5,-6,-7,5,5,5,5,5,42,-2,5,5,5,5,5,5,5,5,5,-26,-27,42,-18,-19,-20,-21,-22,-23,-24,-25,-8,5,-11,5,-14,5,5,5,42,-47,5,5,5,5,-35,-36,42,-46,5,5,-37,-28,5,-38,]),'STRING':([0,2,3,4,5,6,7,8,9,11,12,14,15,16,17,18,19,20,21,22,23,24,25,33,34,45,46,47,48,49,50,51,52,53,56,57,58,59,60,62,63,69,70,72,73,78,80,82,83,84,85,86,90,91,94,96,97,98,],[6,6,-3,-4,-5,-6,-7,6,6,6,6,6,43,-2,6,6,6,6,6,6,6,6,6,-26,-27,43,-18,-19,-20,-21,-22,-23,-24,-25,-8,6,-11,6,-14,6,6,6,43,-47,6,6,6,6,-35,-36,43,-46,6,6,-37,-28,6,-38,]),'IDENT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,33,34,36,45,46,47,48,49,50,51,52,53,56,57,58,59,60,61,62,63,64,69,70,72,73,78,80,81,82,83,84,85,86,90,91,94,96,97,98,],[7,7,-3,-4,-5,-6,-7,7,7,32,7,7,37,7,44,-2,7,7,7,7,7,7,7,7,7,-26,-27,67,44,-18,-19,-20,-21,-22,-23,-24,-25,-8,7,-11,7,-14,32,7,7,79,7,44,-47,7,7,7,67,7,-35,-36,44,-46,7,7,-37,-28,7,-38,]),'LPAREN':([0,2,3,4,5,6,7,8,9,11,12,14,15,16,17,18,19,20,21,22,23,24,25,27,29,33,34,38,45,46,47,48,49,50,51,52,53,54,56,57,58,59,60,62,63,69,70,72,73,74,75,77,78,80,82,83,84,85,86,89,90,91,93,94,96,97,98,],[8,8,25,-4,-5,-6,-7,8,8,8,8,8,45,25,8,8,8,8,8,8,8,8,8,25,25,-26,-27,25,45,25,25,25,25,25,25,25,25,25,-8,8,-11,8,-14,8,8,8,45,-47,8,25,25,25,8,8,8,-35,-36,45,25,25,8,8,25,-37,25,8,25,]),'LBRACKET':([0,2,3,4,5,6,7,8,9,11,12,14,16,17,18,19,20,21,22,23,24,25,33,34,46,47,48,49,50,51,52,53,56,57,58,59,60,62,63,69,72,73,78,80,82,83,84,86,90,91,94,96,97,98,],[9,9,-3,-4,-5,-6,-7,9,9,9,9,9,-2,9,9,9,9,9,9,9,9,9,-26,-27,-18,-19,-20,-21,-22,-23,-24,-25,-8,9,-11,9,-14,9,9,9,-47,9,9,9,9,-35,-36,-46,9,9,-37,-28,9,-38,]),'LBRACE':([0,2,3,4,5,6,7,8,9,11,12,14,16,17,18,19,20,21,22,23,24,25,33,34,46,47,48,49,50,51,52,53,56,57,58,59,60,62,63,69,72,73,78,80,82,83,84,86,90,91,94,96,97,98,],[10,10,-3,-4,-5,-6,-7,10,10,10,10,10,-2,10,10,10,10,10,10,10,10,10,-26,-27,-18,-19,-20,-21,-22,-23,-24,-25,-8,10,-11,10,-14,10,10,10,-47,10,10,10,10,-35,-36,-46,10,10,-37,-28,10,-38,]),'NOT':([0,2,3,4,5,6,7,8,9,11,12,14,16,17,18,19,20,21,22,23,24,25,33,34,46,47,48,49,50,51,52,53,56,57,58,59,60,62,63,69,72,73,78,80,82,83,84,86,90,91,94,96,97,98,],[11,11,-3,-4,-5,-6,-7,11,11,11,11,11,-2,11,11,11,11,11,11,11,11,11,-26,-27,-18,-19,-20,-21,-22,-23,-24,-25,-8,11,-11,11,-14,11,11,11,-47,11,11,11,11,-35,-36,-46,11,11,-37,-28,11,-38,]),'UMINUS':([0,2,3,4,5,6,7,8,9,11,12,14,16,17,18,19,20,21,22,23,24,25,33,34,46,47,48,49,50,51,52,53,56,57,58,59,60,62,63,69,72,73,78,80,82,83,84,86,90,91,94,96,97,98,],[12,12,-3,-4,-5,-6,-7,12,12,12,12,12,-2,12,12,12,12,12,12,12,12,12,-26,-27,-18,-19,-20,-21,-22,-23,-24,-25,-8,12,-11,12,-14,12,12,12,-47,12,12,12,12,-35,-36,-46,12,12,-37,-28,12,-38,]),'LET':([0,2,3,4,5,6,7,8,9,11,12,14,16,17,18,19,20,21,22,23,24,25,33,34,46,47,48,49,50,51,52,53,56,57,58,59,60,62,63,69,72,73,78,80,82,83,84,86,90,91,94,96,97,98,],[13,13,-3,-4,-5,-6,-7,13,13,13,13,13,-2,13,13,13,13,13,13,13,13,13,-26,-27,-18,-19,-20,-21,-22,-23,-24,-25,-8,13,-11,13,-14,13,13,13,-47,13,13,13,13,-35,-36,-46,13,13,-37,-28,13,-38,]),'MATCH':([0,2,3,4,5,6,7,8,9,11,12,14,16,17,18,19,20,21,22,23,24,25,33,34,46,47,48,49,50,51,52,53,56,57,58,59,60,62,63,69,72,73,78,80,82,83,84,86,90,91,94,96,97,98,],[14,14,-3,-4,-5,-6,-7,14,14,14,14,14,-2,14,14,14,14,14,14,14,14,14,-26,-27,-18,-19,-20,-21,-22,-23,-24,-25,-8,14,-11,14,-14,14,14,14,-47,14,14,14,14,-35,-36,-46,14,14,-37,-28,14,-38,]),'LAMBDA':([0,2,3,4,5,6,7,8,9,11,12,14,16,17,18,19,20,21,22,23,24,25,33,34,46,47,48,49,50,51,52,53,56,57,58,59,60,62,63,69,72,73,78,80,82,83,84,86,90,91,94,96,97,98,],[15,15,-3,-4,-5,-6,-7,15,15,15,15,15,-2,15,15,15,15,15,15,15,15,15,-26,-27,-18,-19,-20,-21,-22,-23,-24,-25,-8,15,-11,15,-14,15,15,15,-47,15,15,15,15,-35,-36,-46,15,15,-37,-28,15,-38,]),'$end':([1,2,3,4,5,6,7,16,33,34,46,47,48,49,50,51,52,53,56,58,60,72,83,84,86,91,94,96,98,],[0,-1,-3,-4,-5,-6,-7,-2,-26,-27,-18,-19,-20,-21,-22,-23,-24,-25,-8,-11,-14,-47,-35,-36,-46,-31,-37,-28,-38,]),'IN':([3,4,5,6,7,16,33,34,46,47,48,49,50,51,52,53,56,58,60,65,66,72,78,83,84,86,91,92,93,94,96,98,],[-3,-4,-5,-6,-7,-2,-26,-27,-18,-19,-20,-21,-22,-23,-24,-25,-8,-11,-14,80,-33,-47,90,-35,-36,-46,-31,-32,-34,-37,-28,-38,]),'ADD':([3,4,5,6,7,16,27,29,33,34,38,46,47,48,49,50,51,52,53,54,56,58,60,72,74,75,77,83,84,86,89,91,93,94,96,98,],[17,-4,-5,-6,-7,17,17,17,-26,-27,17,17,17,17,17,17,17,17,17,17,-8,-11,-14,-47,17,17,17,-35,-36,17,17,-31,17,-37,17,17,]),'SUB':([3,4,5,6,7,16,27,29,33,34,38,46,47,48,49,50,51,52,53,54,56,58,60,72,74,75,77,83,84,86,89,91,93,94,96,98,],[18,-4,-5,-6,-7,18,18,18,-26,-27,18,18,18,18,18,18,18,18,18,18,-8,-11,-14,-47,18,18,18,-35,-36,18,18,-31,18,-37,18,18,]),'MUL':([3,4,5,6,7,16,27,29,33,34,38,46,47,48,49,50,51,52,53,54,56,58,60,72,74,75,77,83,84,86,89,91,93,94,96,98,],[19,-4,-5,-6,-7,19,19,19,-26,-27,19,19,19,19,19,19,19,19,19,19,-8,-11,-14,-47,19,19,19,-35,-36,19,19,-31,19,-37,19,19,]),'DIV':([3,4,5,6,7,16,27,29,33,34,38,46,47,48,49,50,51,52,53,54,56,58,60,72,74,75,77,83,84,86,89,91,93,94,96,98,],[20,-4,-5,-6,-7,20,20,20,-26,-27,20,20,20,20,20,20,20,20,20,20,-8,-11,-14,-47,20,20,20,-35,-36,20,20,-31,20,-37,20,20,]),'MOD':([3,4,5,6,7,16,27,29,33,34,38,46,47,48,49,50,51,52,53,54,56,58,60,72,74,75,77,83,84,86,89,91,93,94,96,98,],[21,-4,-5,-6,-7,21,21,21,-26,-27,21,21,21,21,21,21,21,21,21,21,-8,-11,-14,-47,21,21,21,-35,-36,21,21,-31,21,-37,21,21,]),'LT':([3,4,5,6,7,16,27,29,33,34,38,46,47,48,49,50,51,52,53,54,56,58,60,72,74,75,77,83,84,86,89,91,93,94,96,98,],[22,-4,-5,-6,-7,22,22,22,-26,-27,22,22,22,22,22,22,22,22,22,22,-8,-11,-14,-47,22,22,22,-35,-36,22,22,-31,22,-37,22,22,]),'GT':([3,4,5,6,7,16,27,29,33,34,38,46,47,48,49,50,51,52,53,54,56,58,60,72,74,75,77,83,84,86,89,91,93,94,96,98,],[23,-4,-5,-6,-7,23,23,23,-26,-27,23,23,23,23,23,23,23,23,23,23,-8,-11,-14,-47,23,23,23,-35,-36,23,23,-31,23,-37,23,23,]),'EQ':([3,4,5,6,7,16,27,29,33,34,38,46,47,48,49,50,51,52,53,54,56,58,60,72,74,75,77,83,84,86,89,91,93,94,96,98,],[24,-4,-5,-6,-7,24,24,24,-26,-27,24,24,24,24,24,24,24,24,24,24,-8,-11,-14,-47,24,24,24,-35,-36,24,24,-31,24,-37,24,24,]),'RPAREN':([3,4,5,6,7,16,26,27,33,34,40,41,42,43,44,46,47,48,49,50,51,52,53,54,55,56,58,60,71,72,74,83,84,86,87,88,89,91,94,96,98,],[-3,-4,-5,-6,-7,-2,56,-10,-26,-27,-45,-39,-40,-41,-42,-18,-19,-20,-21,-22,-23,-24,-25,-49,72,-8,-11,-14,88,-47,-9,-35,-36,-46,-44,-43,-48,-31,-37,-28,-38,]),'COMMA':([3,4,5,6,7,16,26,27,28,29,30,31,33,34,35,37,39,40,41,42,43,44,46,47,48,49,50,51,52,53,54,55,56,58,60,65,66,71,72,74,75,76,77,79,83,84,86,87,88,89,91,92,93,94,96,98,],[-3,-4,-5,-6,-7,-2,57,-10,59,-13,61,-16,-26,-27,64,-30,70,-45,-39,-40,-41,-42,-18,-19,-20,-21,-22,-23,-24,-25,-49,73,-8,-11,-14,81,-33,70,-47,-9,-12,-15,-17,-29,-35,-36,-46,-44,-43,-48,-31,-32,-34,-37,-28,-38,]),'RBRACKET':([3,4,5,6,7,16,28,29,33,34,46,47,48,49,50,51,52,53,56,58,60,72,75,83,84,86,91,94,96,98,],[-3,-4,-5,-6,-7,-2,58,-13,-26,-27,-18,-19,-20,-21,-22,-23,-24,-25,-8,-11,-14,-47,-12,-35,-36,-46,-31,-37,-28,-38,]),'WITH':([3,4,5,6,7,16,33,34,38,46,47,48,49,50,51,52,53,56,58,60,72,83,84,86,91,94,96,98,],[-3,-4,-5,-6,-7,-2,-26,-27,68,-18,-19,-20,-21,-22,-23,-24,-25,-8,-11,-14,-47,-35,-36,-46,-31,-37,-28,-38,]),'RBRACE':([3,4,5,6,7,16,30,31,33,34,46,47,48,49,50,51,52,53,56,58,60,72,76,77,83,84,86,91,94,96,98,],[-3,-4,-5,-6,-7,-2,60,-16,-26,-27,-18,-19,-20,-21,-22,-23,-24,-25,-8,-11,-14,-47,-15,-17,-35,-36,-46,-31,-37,-28,-38,]),'BAR':([3,4,5,6,7,16,33,34,46,47,48,49,50,51,52,53,56,58,60,68,72,83,84,86,91,94,96,98,],[-3,-4,-5,-6,-7,-2,-26,-27,-18,-19,-20,-21,-22,-23,-24,-25,-8,-11,-14,85,-47,85,-36,-46,-31,-37,-28,-38,]),'REC':([13,],[36,]),'COLON':([32,],[62,]),'DEFINE':([35,37,67,79,],[63,-30,82,-29,]),'ARROW':([39,40,41,42,43,44,87,88,95,],[69,-45,-39,-40,-41,-42,-44,-43,97,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'expressions':([0,63,80,],[2,78,91,]),'expression':([0,2,8,9,11,12,14,17,18,19,20,21,22,23,24,25,57,59,62,63,69,73,78,80,82,90,91,97,],[3,16,27,29,33,34,38,46,47,48,49,50,51,52,53,54,74,75,77,3,86,89,16,3,93,96,16,98,]),'tuple_expr':([8,],[26,]),'list_expr':([9,],[28,]),'record_expr':([10,],[30,]),'record_field':([10,61,],[31,76,]),'ident_list':([13,],[35,]),'pattern_list':([15,45,],[39,71,]),'pattern':([15,45,70,85,],[40,40,87,95,]),'argument_list':([25,],[55,]),'ident_expr_list':([36,],[65,]),'ident_expr':([36,81,],[66,92,]),'match_expr_list':([68,],[83,]),'match_expr':([68,83,],[84,94,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> expressions','program',1,'p_program','elm_parser.py',30),
  ('expressions -> expressions expression','expressions',2,'p_expressions','elm_parser.py',36),
  ('expressions -> expression','expressions',1,'p_expressions','elm_parser.py',37),
  ('expression -> INTEGER','expression',1,'p_expression_integer','elm_parser.py',46),
  ('expression -> FLOAT','expression',1,'p_expression_float','elm_parser.py',51),
  ('expression -> STRING','expression',1,'p_expression_string','elm_parser.py',56),
  ('expression -> IDENT','expression',1,'p_expression_ident','elm_parser.py',61),
  ('expression -> LPAREN tuple_expr RPAREN','expression',3,'p_expression_tuple','elm_parser.py',66),
  ('tuple_expr -> tuple_expr COMMA expression','tuple_expr',3,'p_tuple_expr','elm_parser.py',72),
  ('tuple_expr -> expression','tuple_expr',1,'p_tuple_expr','elm_parser.py',73),
  ('expression -> LBRACKET list_expr RBRACKET','expression',3,'p_expression_list','elm_parser.py',82),
  ('list_expr -> list_expr COMMA expression','list_expr',3,'p_list_expr','elm_parser.py',88),
  ('list_expr -> expression','list_expr',1,'p_list_expr','elm_parser.py',89),
  ('expression -> LBRACE record_expr RBRACE','expression',3,'p_expression_record','elm_parser.py',98),
  ('record_expr -> record_expr COMMA record_field','record_expr',3,'p_record_expr','elm_parser.py',104),
  ('record_expr -> record_field','record_expr',1,'p_record_expr','elm_parser.py',105),
  ('record_field -> IDENT COLON expression','record_field',3,'p_record_field','elm_parser.py',114),
  ('expression -> expression ADD expression','expression',3,'p_expression_binop','elm_parser.py',120),
  ('expression -> expression SUB expression','expression',3,'p_expression_binop','elm_parser.py',121),
  ('expression -> expression MUL expression','expression',3,'p_expression_binop','elm_parser.py',122),
  ('expression -> expression DIV expression','expression',3,'p_expression_binop','elm_parser.py',123),
  ('expression -> expression MOD expression','expression',3,'p_expression_binop','elm_parser.py',124),
  ('expression -> expression LT expression','expression',3,'p_expression_binop','elm_parser.py',125),
  ('expression -> expression GT expression','expression',3,'p_expression_binop','elm_parser.py',126),
  ('expression -> expression EQ expression','expression',3,'p_expression_binop','elm_parser.py',127),
  ('expression -> NOT expression','expression',2,'p_expression_not','elm_parser.py',132),
  ('expression -> UMINUS expression','expression',2,'p_expression_unop','elm_parser.py',136),
  ('expression -> LET ident_list DEFINE expressions IN expression','expression',6,'p_expression_let','elm_parser.py',141),
  ('ident_list -> ident_list COMMA IDENT','ident_list',3,'p_ident_list','elm_parser.py',147),
  ('ident_list -> IDENT','ident_list',1,'p_ident_list','elm_parser.py',148),
  ('expression -> LET REC ident_expr_list IN expressions','expression',5,'p_expression_let_rec','elm_parser.py',157),
  ('ident_expr_list -> ident_expr_list COMMA ident_expr','ident_expr_list',3,'p_ident_expr_list','elm_parser.py',163),
  ('ident_expr_list -> ident_expr','ident_expr_list',1,'p_ident_expr_list','elm_parser.py',164),
  ('ident_expr -> IDENT DEFINE expression','ident_expr',3,'p_ident_expr','elm_parser.py',173),
  ('expression -> MATCH expression WITH match_expr_list','expression',4,'p_expression_match','elm_parser.py',178),
  ('match_expr_list -> match_expr','match_expr_list',1,'p_match_expr_list_single','elm_parser.py',183),
  ('match_expr_list -> match_expr_list match_expr','match_expr_list',2,'p_match_expr_list_multiple','elm_parser.py',187),
  ('match_expr -> BAR pattern ARROW expression','match_expr',4,'p_match_expr','elm_parser.py',191),
  ('pattern -> INTEGER','pattern',1,'p_pattern_literal','elm_parser.py',197),
  ('pattern -> FLOAT','pattern',1,'p_pattern_literal','elm_parser.py',198),
  ('pattern -> STRING','pattern',1,'p_pattern_literal','elm_parser.py',199),
  ('pattern -> IDENT','pattern',1,'p_pattern_ident','elm_parser.py',208),
  ('pattern -> LPAREN pattern_list RPAREN','pattern',3,'p_pattern_tuple','elm_parser.py',213),
  ('pattern_list -> pattern_list COMMA pattern','pattern_list',3,'p_pattern_list','elm_parser.py',219),
  ('pattern_list -> pattern','pattern_list',1,'p_pattern_list','elm_parser.py',220),
  ('expression -> LAMBDA pattern_list ARROW expression','expression',4,'p_expression_lambda','elm_parser.py',229),
  ('expression -> expression LPAREN argument_list RPAREN','expression',4,'p_expression_function_call','elm_parser.py',234),
  ('argument_list -> argument_list COMMA expression','argument_list',3,'p_argument_list','elm_parser.py',240),
  ('argument_list -> expression','argument_list',1,'p_argument_list','elm_parser.py',241),
]
